import { ContentView, LayoutBase, ProxyViewContainer, View } from '@nativescript/core';
import { InvisibleNode } from './invisible-nodes';
export function isDetachedElement(element) {
    return element && element.meta && element.meta.skipAddToDom;
}
export function isView(view) {
    return view instanceof View;
}
export function isInvisibleNode(view) {
    return view instanceof InvisibleNode;
}
export function isLayout(view) {
    return view instanceof LayoutBase;
}
export function isContentView(view) {
    return view instanceof ContentView;
}
export function getFirstNativeLikeView(view, extractFromNSParent = false) {
    if (view instanceof ProxyViewContainer) {
        if (view.getChildrenCount() === 0) {
            return null;
        }
        return getFirstNativeLikeView(view.getChildAt(0));
    }
    if (extractFromNSParent) {
        const node = view.parentNode;
        detachViewFromParent(view);
        view.parentNode = node;
    }
    return view;
}
export function detachViewFromParent(view) {
    const parent = view?.parent;
    if (!parent) {
        return;
    }
    if (parent.meta && parent.meta.removeChild) {
        parent.meta.removeChild(parent, view);
    }
    else if (isLayout(parent)) {
        parent.removeChild(view);
    }
    else if (isContentView(parent) && parent.content === view) {
        parent.content = null;
    }
    else if (isView(parent)) {
        parent._removeView(view);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9hbmd1bGFyL3NyYy9saWIvdmlld3MvdXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFdBQVcsRUFBRSxVQUFVLEVBQUUsa0JBQWtCLEVBQUUsSUFBSSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDdkYsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBR2xELE1BQU0sVUFBVSxpQkFBaUIsQ0FBQyxPQUFzQjtJQUN0RCxPQUFPLE9BQU8sSUFBYSxPQUFRLENBQUMsSUFBSSxJQUFhLE9BQVEsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDO0FBQ2xGLENBQUM7QUFFRCxNQUFNLFVBQVUsTUFBTSxDQUFDLElBQWE7SUFDbEMsT0FBTyxJQUFJLFlBQVksSUFBSSxDQUFDO0FBQzlCLENBQUM7QUFFRCxNQUFNLFVBQVUsZUFBZSxDQUFDLElBQWE7SUFDM0MsT0FBTyxJQUFJLFlBQVksYUFBYSxDQUFDO0FBQ3ZDLENBQUM7QUFFRCxNQUFNLFVBQVUsUUFBUSxDQUFDLElBQWE7SUFDcEMsT0FBTyxJQUFJLFlBQVksVUFBVSxDQUFDO0FBQ3BDLENBQUM7QUFFRCxNQUFNLFVBQVUsYUFBYSxDQUFDLElBQWE7SUFDekMsT0FBTyxJQUFJLFlBQVksV0FBVyxDQUFDO0FBQ3JDLENBQUM7QUFFRCxNQUFNLFVBQVUsc0JBQXNCLENBQUMsSUFBVSxFQUFFLG1CQUFtQixHQUFHLEtBQUs7SUFDNUUsSUFBSSxJQUFJLFlBQVksa0JBQWtCLEVBQUU7UUFDdEMsSUFBSSxJQUFJLENBQUMsZ0JBQWdCLEVBQUUsS0FBSyxDQUFDLEVBQUU7WUFDakMsT0FBTyxJQUFJLENBQUM7U0FDYjtRQUNELE9BQU8sc0JBQXNCLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQ25EO0lBRUQsSUFBSSxtQkFBbUIsRUFBRTtRQUN2QixNQUFNLElBQUksR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDO1FBQzdCLG9CQUFvQixDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzNCLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDO0tBQ3hCO0lBQ0QsT0FBTyxJQUFJLENBQUM7QUFDZCxDQUFDO0FBRUQsTUFBTSxVQUFVLG9CQUFvQixDQUFDLElBQVU7SUFDN0MsTUFBTSxNQUFNLEdBQVcsSUFBSSxFQUFFLE1BQU0sQ0FBQztJQUNwQyxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ1gsT0FBTztLQUNSO0lBQ0QsSUFBSSxNQUFNLENBQUMsSUFBSSxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFO1FBQzFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQztLQUN2QztTQUFNLElBQUksUUFBUSxDQUFDLE1BQU0sQ0FBQyxFQUFFO1FBQzNCLE1BQU0sQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUM7S0FDMUI7U0FBTSxJQUFJLGFBQWEsQ0FBQyxNQUFNLENBQUMsSUFBSSxNQUFNLENBQUMsT0FBTyxLQUFLLElBQUksRUFBRTtRQUMzRCxNQUFNLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQztLQUN2QjtTQUFNLElBQUksTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFO1FBQ3pCLE1BQU0sQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUM7S0FDMUI7QUFDSCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29udGVudFZpZXcsIExheW91dEJhc2UsIFByb3h5Vmlld0NvbnRhaW5lciwgVmlldyB9IGZyb20gJ0BuYXRpdmVzY3JpcHQvY29yZSc7XG5pbXBvcnQgeyBJbnZpc2libGVOb2RlIH0gZnJvbSAnLi9pbnZpc2libGUtbm9kZXMnO1xuaW1wb3J0IHR5cGUgeyBOZ0NvbnRlbnRWaWV3LCBOZ0xheW91dEJhc2UsIE5nVmlldyB9IGZyb20gJy4vdmlldy10eXBlcyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBpc0RldGFjaGVkRWxlbWVudChlbGVtZW50OiBWaWV3IHwgTmdWaWV3KTogYm9vbGVhbiB7XG4gIHJldHVybiBlbGVtZW50ICYmICg8TmdWaWV3PmVsZW1lbnQpLm1ldGEgJiYgKDxOZ1ZpZXc+ZWxlbWVudCkubWV0YS5za2lwQWRkVG9Eb207XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc1ZpZXcodmlldzogdW5rbm93bik6IHZpZXcgaXMgTmdWaWV3IHtcbiAgcmV0dXJuIHZpZXcgaW5zdGFuY2VvZiBWaWV3O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNJbnZpc2libGVOb2RlKHZpZXc6IHVua25vd24pOiB2aWV3IGlzIEludmlzaWJsZU5vZGUge1xuICByZXR1cm4gdmlldyBpbnN0YW5jZW9mIEludmlzaWJsZU5vZGU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc0xheW91dCh2aWV3OiB1bmtub3duKTogdmlldyBpcyBOZ0xheW91dEJhc2Uge1xuICByZXR1cm4gdmlldyBpbnN0YW5jZW9mIExheW91dEJhc2U7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc0NvbnRlbnRWaWV3KHZpZXc6IHVua25vd24pOiB2aWV3IGlzIE5nQ29udGVudFZpZXcge1xuICByZXR1cm4gdmlldyBpbnN0YW5jZW9mIENvbnRlbnRWaWV3O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0Rmlyc3ROYXRpdmVMaWtlVmlldyh2aWV3OiBWaWV3LCBleHRyYWN0RnJvbU5TUGFyZW50ID0gZmFsc2UpIHtcbiAgaWYgKHZpZXcgaW5zdGFuY2VvZiBQcm94eVZpZXdDb250YWluZXIpIHtcbiAgICBpZiAodmlldy5nZXRDaGlsZHJlbkNvdW50KCkgPT09IDApIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4gZ2V0Rmlyc3ROYXRpdmVMaWtlVmlldyh2aWV3LmdldENoaWxkQXQoMCkpO1xuICB9XG5cbiAgaWYgKGV4dHJhY3RGcm9tTlNQYXJlbnQpIHtcbiAgICBjb25zdCBub2RlID0gdmlldy5wYXJlbnROb2RlO1xuICAgIGRldGFjaFZpZXdGcm9tUGFyZW50KHZpZXcpO1xuICAgIHZpZXcucGFyZW50Tm9kZSA9IG5vZGU7XG4gIH1cbiAgcmV0dXJuIHZpZXc7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBkZXRhY2hWaWV3RnJvbVBhcmVudCh2aWV3OiBWaWV3KSB7XG4gIGNvbnN0IHBhcmVudCA9IDxOZ1ZpZXc+dmlldz8ucGFyZW50O1xuICBpZiAoIXBhcmVudCkge1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAocGFyZW50Lm1ldGEgJiYgcGFyZW50Lm1ldGEucmVtb3ZlQ2hpbGQpIHtcbiAgICBwYXJlbnQubWV0YS5yZW1vdmVDaGlsZChwYXJlbnQsIHZpZXcpO1xuICB9IGVsc2UgaWYgKGlzTGF5b3V0KHBhcmVudCkpIHtcbiAgICBwYXJlbnQucmVtb3ZlQ2hpbGQodmlldyk7XG4gIH0gZWxzZSBpZiAoaXNDb250ZW50VmlldyhwYXJlbnQpICYmIHBhcmVudC5jb250ZW50ID09PSB2aWV3KSB7XG4gICAgcGFyZW50LmNvbnRlbnQgPSBudWxsO1xuICB9IGVsc2UgaWYgKGlzVmlldyhwYXJlbnQpKSB7XG4gICAgcGFyZW50Ll9yZW1vdmVWaWV3KHZpZXcpO1xuICB9XG59XG4iXX0=