/* eslint-disable @angular-eslint/component-selector */
import { Component, Inject } from '@angular/core';
import { platformNames } from '@nativescript/core';
import { DEVICE } from '../../tokens';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export class IOSFilterComponent {
    constructor(device) {
        this.show = device.os === platformNames.ios;
    }
}
IOSFilterComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: IOSFilterComponent, deps: [{ token: DEVICE }], target: i0.ɵɵFactoryTarget.Component });
IOSFilterComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.3", type: IOSFilterComponent, selector: "ios", ngImport: i0, template: `<ng-content *ngIf="show"></ng-content>`, isInline: true, dependencies: [{ kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: IOSFilterComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'ios',
                    template: `<ng-content *ngIf="show"></ng-content>`,
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [DEVICE]
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW9zLWZpbHRlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9hbmd1bGFyL3NyYy9saWIvY2RrL3BsYXRmb3JtLWZpbHRlcnMvaW9zLWZpbHRlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsdURBQXVEO0FBQ3ZELE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2xELE9BQU8sRUFBRSxhQUFhLEVBQVcsTUFBTSxvQkFBb0IsQ0FBQztBQUM1RCxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sY0FBYyxDQUFDOzs7QUFNdEMsTUFBTSxPQUFPLGtCQUFrQjtJQUU3QixZQUE0QixNQUFlO1FBQ3pDLElBQUksQ0FBQyxJQUFJLEdBQUcsTUFBTSxDQUFDLEVBQUUsS0FBSyxhQUFhLENBQUMsR0FBRyxDQUFDO0lBQzlDLENBQUM7OytHQUpVLGtCQUFrQixrQkFFVCxNQUFNO21HQUZmLGtCQUFrQiwyQ0FGbkIsd0NBQXdDOzJGQUV2QyxrQkFBa0I7a0JBSjlCLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLEtBQUs7b0JBQ2YsUUFBUSxFQUFFLHdDQUF3QztpQkFDbkQ7OzBCQUdjLE1BQU07MkJBQUMsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIEBhbmd1bGFyLWVzbGludC9jb21wb25lbnQtc2VsZWN0b3IgKi9cbmltcG9ydCB7IENvbXBvbmVudCwgSW5qZWN0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBwbGF0Zm9ybU5hbWVzLCBJRGV2aWNlIH0gZnJvbSAnQG5hdGl2ZXNjcmlwdC9jb3JlJztcbmltcG9ydCB7IERFVklDRSB9IGZyb20gJy4uLy4uL3Rva2Vucyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2lvcycsXG4gIHRlbXBsYXRlOiBgPG5nLWNvbnRlbnQgKm5nSWY9XCJzaG93XCI+PC9uZy1jb250ZW50PmAsXG59KVxuZXhwb3J0IGNsYXNzIElPU0ZpbHRlckNvbXBvbmVudCB7XG4gIHB1YmxpYyBzaG93OiBib29sZWFuO1xuICBjb25zdHJ1Y3RvcihASW5qZWN0KERFVklDRSkgZGV2aWNlOiBJRGV2aWNlKSB7XG4gICAgdGhpcy5zaG93ID0gZGV2aWNlLm9zID09PSBwbGF0Zm9ybU5hbWVzLmlvcztcbiAgfVxufVxuIl19