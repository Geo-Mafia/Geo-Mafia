/* eslint-disable @angular-eslint/component-selector */
import { Component, Inject } from '@angular/core';
import { platformNames } from '@nativescript/core';
import { DEVICE } from '../../tokens';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export class AndroidFilterComponent {
    constructor(device) {
        this.show = device.os === platformNames.android;
    }
}
AndroidFilterComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: AndroidFilterComponent, deps: [{ token: DEVICE }], target: i0.ɵɵFactoryTarget.Component });
AndroidFilterComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.3", type: AndroidFilterComponent, selector: "android", ngImport: i0, template: `<ng-content *ngIf="show"></ng-content>`, isInline: true, dependencies: [{ kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: AndroidFilterComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'android',
                    template: `<ng-content *ngIf="show"></ng-content>`,
                }]
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [DEVICE]
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5kcm9pZC1maWx0ZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvYW5ndWxhci9zcmMvbGliL2Nkay9wbGF0Zm9ybS1maWx0ZXJzL2FuZHJvaWQtZmlsdGVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx1REFBdUQ7QUFDdkQsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDbEQsT0FBTyxFQUFFLGFBQWEsRUFBVyxNQUFNLG9CQUFvQixDQUFDO0FBQzVELE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxjQUFjLENBQUM7OztBQU10QyxNQUFNLE9BQU8sc0JBQXNCO0lBR2pDLFlBQTRCLE1BQWU7UUFDekMsSUFBSSxDQUFDLElBQUksR0FBRyxNQUFNLENBQUMsRUFBRSxLQUFLLGFBQWEsQ0FBQyxPQUFPLENBQUM7SUFDbEQsQ0FBQzs7bUhBTFUsc0JBQXNCLGtCQUdiLE1BQU07dUdBSGYsc0JBQXNCLCtDQUZ2Qix3Q0FBd0M7MkZBRXZDLHNCQUFzQjtrQkFKbEMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsU0FBUztvQkFDbkIsUUFBUSxFQUFFLHdDQUF3QztpQkFDbkQ7OzBCQUljLE1BQU07MkJBQUMsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIEBhbmd1bGFyLWVzbGludC9jb21wb25lbnQtc2VsZWN0b3IgKi9cbmltcG9ydCB7IENvbXBvbmVudCwgSW5qZWN0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBwbGF0Zm9ybU5hbWVzLCBJRGV2aWNlIH0gZnJvbSAnQG5hdGl2ZXNjcmlwdC9jb3JlJztcbmltcG9ydCB7IERFVklDRSB9IGZyb20gJy4uLy4uL3Rva2Vucyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FuZHJvaWQnLFxuICB0ZW1wbGF0ZTogYDxuZy1jb250ZW50ICpuZ0lmPVwic2hvd1wiPjwvbmctY29udGVudD5gLFxufSlcbmV4cG9ydCBjbGFzcyBBbmRyb2lkRmlsdGVyQ29tcG9uZW50IHtcbiAgcHVibGljIHNob3c6IGJvb2xlYW47XG5cbiAgY29uc3RydWN0b3IoQEluamVjdChERVZJQ0UpIGRldmljZTogSURldmljZSkge1xuICAgIHRoaXMuc2hvdyA9IGRldmljZS5vcyA9PT0gcGxhdGZvcm1OYW1lcy5hbmRyb2lkO1xuICB9XG59XG4iXX0=