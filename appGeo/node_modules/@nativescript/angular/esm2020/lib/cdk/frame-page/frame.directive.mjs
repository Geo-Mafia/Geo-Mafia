import { Directive, ElementRef } from '@angular/core';
import { Frame } from '@nativescript/core';
import * as i0 from "@angular/core";
export function customFrameDirectiveFactory(v) {
    return v.element.nativeElement;
}
export class FrameDirective {
    constructor(element) {
        this.element = element;
    }
}
FrameDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: FrameDirective, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
FrameDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "14.2.3", type: FrameDirective, selector: "Frame", providers: [
        {
            provide: Frame,
            useFactory: customFrameDirectiveFactory,
            deps: [FrameDirective],
        },
    ], ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: FrameDirective, decorators: [{
            type: Directive,
            args: [{
                    // eslint-disable-next-line @angular-eslint/directive-selector
                    selector: 'Frame',
                    providers: [
                        {
                            provide: Frame,
                            useFactory: customFrameDirectiveFactory,
                            deps: [FrameDirective],
                        },
                    ],
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnJhbWUuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvYW5ndWxhci9zcmMvbGliL2Nkay9mcmFtZS1wYWdlL2ZyYW1lLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN0RCxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7O0FBRTNDLE1BQU0sVUFBVSwyQkFBMkIsQ0FBQyxDQUFpQjtJQUMzRCxPQUFPLENBQUMsQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDO0FBQ2pDLENBQUM7QUFhRCxNQUFNLE9BQU8sY0FBYztJQUN6QixZQUFtQixPQUEwQjtRQUExQixZQUFPLEdBQVAsT0FBTyxDQUFtQjtJQUFHLENBQUM7OzJHQUR0QyxjQUFjOytGQUFkLGNBQWMsZ0NBUmQ7UUFDVDtZQUNFLE9BQU8sRUFBRSxLQUFLO1lBQ2QsVUFBVSxFQUFFLDJCQUEyQjtZQUN2QyxJQUFJLEVBQUUsQ0FBQyxjQUFjLENBQUM7U0FDdkI7S0FDRjsyRkFFVSxjQUFjO2tCQVgxQixTQUFTO21CQUFDO29CQUNULDhEQUE4RDtvQkFDOUQsUUFBUSxFQUFFLE9BQU87b0JBQ2pCLFNBQVMsRUFBRTt3QkFDVDs0QkFDRSxPQUFPLEVBQUUsS0FBSzs0QkFDZCxVQUFVLEVBQUUsMkJBQTJCOzRCQUN2QyxJQUFJLEVBQUUsZ0JBQWdCO3lCQUN2QjtxQkFDRjtpQkFDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgRWxlbWVudFJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRnJhbWUgfSBmcm9tICdAbmF0aXZlc2NyaXB0L2NvcmUnO1xuXG5leHBvcnQgZnVuY3Rpb24gY3VzdG9tRnJhbWVEaXJlY3RpdmVGYWN0b3J5KHY6IEZyYW1lRGlyZWN0aXZlKSB7XG4gIHJldHVybiB2LmVsZW1lbnQubmF0aXZlRWxlbWVudDtcbn1cblxuQERpcmVjdGl2ZSh7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAYW5ndWxhci1lc2xpbnQvZGlyZWN0aXZlLXNlbGVjdG9yXG4gIHNlbGVjdG9yOiAnRnJhbWUnLFxuICBwcm92aWRlcnM6IFtcbiAgICB7XG4gICAgICBwcm92aWRlOiBGcmFtZSxcbiAgICAgIHVzZUZhY3Rvcnk6IGN1c3RvbUZyYW1lRGlyZWN0aXZlRmFjdG9yeSxcbiAgICAgIGRlcHM6IFtGcmFtZURpcmVjdGl2ZV0sXG4gICAgfSxcbiAgXSxcbn0pXG5leHBvcnQgY2xhc3MgRnJhbWVEaXJlY3RpdmUge1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgZWxlbWVudDogRWxlbWVudFJlZjxGcmFtZT4pIHt9XG59XG4iXX0=