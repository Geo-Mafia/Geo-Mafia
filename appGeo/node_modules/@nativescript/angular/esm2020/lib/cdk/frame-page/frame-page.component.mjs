import { Component, ElementRef, Input, Renderer2 } from '@angular/core';
import { Frame, Page } from '@nativescript/core';
import { frameMeta, registerElement } from '../../element-registry';
import { PageService } from './page.service';
import * as i0 from "@angular/core";
export function customFrameComponentFactory(v) {
    return v.element.nativeElement;
}
export function customPageFactoryFromFrame(v) {
    return v.page;
}
registerElement('FramePage', () => Frame, {
    insertChild: (parent, child) => {
        if (child instanceof Page) {
            frameMeta.insertChild(parent, child);
            return;
        }
        parent['__ng_page__'].content = child;
    },
});
export class FramePageComponent {
    constructor(element, renderer) {
        this.element = element;
        this.actionBarHidden = false;
        this.page = renderer.createElement('Page');
        element.nativeElement['__ng_page__'] = this.page;
        renderer.appendChild(element.nativeElement, this.page);
    }
    ngOnChanges(changes) {
        if (changes.actionBarHidden && changes.actionBarHidden.previousValue !== changes.actionBarHidden.currentValue) {
            if (this.page) {
                this.page.actionBarHidden = !!this.actionBarHidden;
            }
        }
    }
    ngAfterViewInit() {
        if (this.page) {
            this.page.actionBarHidden = !!this.actionBarHidden;
        }
    }
}
FramePageComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: FramePageComponent, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Component });
FramePageComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.3", type: FramePageComponent, selector: "FramePage", inputs: { actionBarHidden: "actionBarHidden" }, providers: [
        {
            provide: Frame,
            useFactory: customFrameComponentFactory,
            deps: [FramePageComponent],
        },
        {
            provide: Page,
            useFactory: customPageFactoryFromFrame,
            deps: [FramePageComponent],
        },
        PageService,
    ], usesOnChanges: true, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: FramePageComponent, decorators: [{
            type: Component,
            args: [{
                    // eslint-disable-next-line @angular-eslint/component-selector
                    selector: 'FramePage',
                    template: `<ng-content></ng-content>`,
                    providers: [
                        {
                            provide: Frame,
                            useFactory: customFrameComponentFactory,
                            deps: [FramePageComponent],
                        },
                        {
                            provide: Page,
                            useFactory: customPageFactoryFromFrame,
                            deps: [FramePageComponent],
                        },
                        PageService,
                    ],
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }]; }, propDecorators: { actionBarHidden: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnJhbWUtcGFnZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9hbmd1bGFyL3NyYy9saWIvY2RrL2ZyYW1lLXBhZ2UvZnJhbWUtcGFnZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFpQixTQUFTLEVBQUUsVUFBVSxFQUFFLEtBQUssRUFBYSxTQUFTLEVBQTRCLE1BQU0sZUFBZSxDQUFDO0FBQzVILE9BQU8sRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFRLE1BQU0sb0JBQW9CLENBQUM7QUFDdkQsT0FBTyxFQUFFLFNBQVMsRUFBRSxlQUFlLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUNwRSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7O0FBRTdDLE1BQU0sVUFBVSwyQkFBMkIsQ0FBQyxDQUFxQjtJQUMvRCxPQUFPLENBQUMsQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDO0FBQ2pDLENBQUM7QUFFRCxNQUFNLFVBQVUsMEJBQTBCLENBQUMsQ0FBcUI7SUFDOUQsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDO0FBQ2hCLENBQUM7QUFFRCxlQUFlLENBQUMsV0FBVyxFQUFFLEdBQUcsRUFBRSxDQUFDLEtBQUssRUFBRTtJQUN4QyxXQUFXLEVBQUUsQ0FBQyxNQUFhLEVBQUUsS0FBVyxFQUFFLEVBQUU7UUFDMUMsSUFBSSxLQUFLLFlBQVksSUFBSSxFQUFFO1lBQ3pCLFNBQVMsQ0FBQyxXQUFXLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDO1lBQ3JDLE9BQU87U0FDUjtRQUNELE1BQU0sQ0FBQyxhQUFhLENBQUMsQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO0lBQ3hDLENBQUM7Q0FDRixDQUFDLENBQUM7QUFtQkgsTUFBTSxPQUFPLGtCQUFrQjtJQUs3QixZQUFtQixPQUEwQixFQUFFLFFBQW1CO1FBQS9DLFlBQU8sR0FBUCxPQUFPLENBQW1CO1FBRnBDLG9CQUFlLEdBQUcsS0FBSyxDQUFDO1FBRy9CLElBQUksQ0FBQyxJQUFJLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxNQUFNLENBQVMsQ0FBQztRQUNuRCxPQUFPLENBQUMsYUFBYSxDQUFDLGFBQWEsQ0FBQyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUM7UUFDakQsUUFBUSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN6RCxDQUFDO0lBRUQsV0FBVyxDQUFDLE9BQXNCO1FBQ2hDLElBQUksT0FBTyxDQUFDLGVBQWUsSUFBSSxPQUFPLENBQUMsZUFBZSxDQUFDLGFBQWEsS0FBSyxPQUFPLENBQUMsZUFBZSxDQUFDLFlBQVksRUFBRTtZQUM3RyxJQUFJLElBQUksQ0FBQyxJQUFJLEVBQUU7Z0JBQ2IsSUFBSSxDQUFDLElBQUksQ0FBQyxlQUFlLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUM7YUFDcEQ7U0FDRjtJQUNILENBQUM7SUFDRCxlQUFlO1FBQ2IsSUFBSSxJQUFJLENBQUMsSUFBSSxFQUFFO1lBQ2IsSUFBSSxDQUFDLElBQUksQ0FBQyxlQUFlLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUM7U0FDcEQ7SUFDSCxDQUFDOzsrR0F0QlUsa0JBQWtCO21HQUFsQixrQkFBa0Isb0ZBZGxCO1FBQ1Q7WUFDRSxPQUFPLEVBQUUsS0FBSztZQUNkLFVBQVUsRUFBRSwyQkFBMkI7WUFDdkMsSUFBSSxFQUFFLENBQUMsa0JBQWtCLENBQUM7U0FDM0I7UUFDRDtZQUNFLE9BQU8sRUFBRSxJQUFJO1lBQ2IsVUFBVSxFQUFFLDBCQUEwQjtZQUN0QyxJQUFJLEVBQUUsQ0FBQyxrQkFBa0IsQ0FBQztTQUMzQjtRQUNELFdBQVc7S0FDWiwrQ0FiUywyQkFBMkI7MkZBZTFCLGtCQUFrQjtrQkFsQjlCLFNBQVM7bUJBQUM7b0JBQ1QsOERBQThEO29CQUM5RCxRQUFRLEVBQUUsV0FBVztvQkFDckIsUUFBUSxFQUFFLDJCQUEyQjtvQkFDckMsU0FBUyxFQUFFO3dCQUNUOzRCQUNFLE9BQU8sRUFBRSxLQUFLOzRCQUNkLFVBQVUsRUFBRSwyQkFBMkI7NEJBQ3ZDLElBQUksRUFBRSxvQkFBb0I7eUJBQzNCO3dCQUNEOzRCQUNFLE9BQU8sRUFBRSxJQUFJOzRCQUNiLFVBQVUsRUFBRSwwQkFBMEI7NEJBQ3RDLElBQUksRUFBRSxvQkFBb0I7eUJBQzNCO3dCQUNELFdBQVc7cUJBQ1o7aUJBQ0Y7eUhBSVUsZUFBZTtzQkFBdkIsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFmdGVyVmlld0luaXQsIENvbXBvbmVudCwgRWxlbWVudFJlZiwgSW5wdXQsIE9uQ2hhbmdlcywgUmVuZGVyZXIyLCBTaW1wbGVDaGFuZ2VzLCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZyYW1lLCBQYWdlLCBWaWV3IH0gZnJvbSAnQG5hdGl2ZXNjcmlwdC9jb3JlJztcbmltcG9ydCB7IGZyYW1lTWV0YSwgcmVnaXN0ZXJFbGVtZW50IH0gZnJvbSAnLi4vLi4vZWxlbWVudC1yZWdpc3RyeSc7XG5pbXBvcnQgeyBQYWdlU2VydmljZSB9IGZyb20gJy4vcGFnZS5zZXJ2aWNlJztcblxuZXhwb3J0IGZ1bmN0aW9uIGN1c3RvbUZyYW1lQ29tcG9uZW50RmFjdG9yeSh2OiBGcmFtZVBhZ2VDb21wb25lbnQpIHtcbiAgcmV0dXJuIHYuZWxlbWVudC5uYXRpdmVFbGVtZW50O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY3VzdG9tUGFnZUZhY3RvcnlGcm9tRnJhbWUodjogRnJhbWVQYWdlQ29tcG9uZW50KSB7XG4gIHJldHVybiB2LnBhZ2U7XG59XG5cbnJlZ2lzdGVyRWxlbWVudCgnRnJhbWVQYWdlJywgKCkgPT4gRnJhbWUsIHtcbiAgaW5zZXJ0Q2hpbGQ6IChwYXJlbnQ6IEZyYW1lLCBjaGlsZDogVmlldykgPT4ge1xuICAgIGlmIChjaGlsZCBpbnN0YW5jZW9mIFBhZ2UpIHtcbiAgICAgIGZyYW1lTWV0YS5pbnNlcnRDaGlsZChwYXJlbnQsIGNoaWxkKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgcGFyZW50WydfX25nX3BhZ2VfXyddLmNvbnRlbnQgPSBjaGlsZDtcbiAgfSxcbn0pO1xuQENvbXBvbmVudCh7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAYW5ndWxhci1lc2xpbnQvY29tcG9uZW50LXNlbGVjdG9yXG4gIHNlbGVjdG9yOiAnRnJhbWVQYWdlJyxcbiAgdGVtcGxhdGU6IGA8bmctY29udGVudD48L25nLWNvbnRlbnQ+YCxcbiAgcHJvdmlkZXJzOiBbXG4gICAge1xuICAgICAgcHJvdmlkZTogRnJhbWUsXG4gICAgICB1c2VGYWN0b3J5OiBjdXN0b21GcmFtZUNvbXBvbmVudEZhY3RvcnksXG4gICAgICBkZXBzOiBbRnJhbWVQYWdlQ29tcG9uZW50XSxcbiAgICB9LFxuICAgIHtcbiAgICAgIHByb3ZpZGU6IFBhZ2UsXG4gICAgICB1c2VGYWN0b3J5OiBjdXN0b21QYWdlRmFjdG9yeUZyb21GcmFtZSxcbiAgICAgIGRlcHM6IFtGcmFtZVBhZ2VDb21wb25lbnRdLFxuICAgIH0sXG4gICAgUGFnZVNlcnZpY2UsXG4gIF0sXG59KVxuZXhwb3J0IGNsYXNzIEZyYW1lUGFnZUNvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQsIE9uQ2hhbmdlcyB7XG4gIHBhZ2U6IFBhZ2U7XG5cbiAgQElucHV0KCkgYWN0aW9uQmFySGlkZGVuID0gZmFsc2U7XG5cbiAgY29uc3RydWN0b3IocHVibGljIGVsZW1lbnQ6IEVsZW1lbnRSZWY8RnJhbWU+LCByZW5kZXJlcjogUmVuZGVyZXIyKSB7XG4gICAgdGhpcy5wYWdlID0gcmVuZGVyZXIuY3JlYXRlRWxlbWVudCgnUGFnZScpIGFzIFBhZ2U7XG4gICAgZWxlbWVudC5uYXRpdmVFbGVtZW50WydfX25nX3BhZ2VfXyddID0gdGhpcy5wYWdlO1xuICAgIHJlbmRlcmVyLmFwcGVuZENoaWxkKGVsZW1lbnQubmF0aXZlRWxlbWVudCwgdGhpcy5wYWdlKTtcbiAgfVxuXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkIHtcbiAgICBpZiAoY2hhbmdlcy5hY3Rpb25CYXJIaWRkZW4gJiYgY2hhbmdlcy5hY3Rpb25CYXJIaWRkZW4ucHJldmlvdXNWYWx1ZSAhPT0gY2hhbmdlcy5hY3Rpb25CYXJIaWRkZW4uY3VycmVudFZhbHVlKSB7XG4gICAgICBpZiAodGhpcy5wYWdlKSB7XG4gICAgICAgIHRoaXMucGFnZS5hY3Rpb25CYXJIaWRkZW4gPSAhIXRoaXMuYWN0aW9uQmFySGlkZGVuO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZCB7XG4gICAgaWYgKHRoaXMucGFnZSkge1xuICAgICAgdGhpcy5wYWdlLmFjdGlvbkJhckhpZGRlbiA9ICEhdGhpcy5hY3Rpb25CYXJIaWRkZW47XG4gICAgfVxuICB9XG59XG4iXX0=