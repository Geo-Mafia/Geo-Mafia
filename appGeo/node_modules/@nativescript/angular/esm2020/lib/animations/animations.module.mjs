import { NgModule, Injectable, Inject, NgZone, RendererFactory2, Optional, SkipSelf } from '@angular/core';
import { DOCUMENT } from '@angular/common';
import { AnimationBuilder } from '@angular/animations';
import { AnimationDriver, ɵAnimationStyleNormalizer as AnimationStyleNormalizer, ɵWebAnimationsStyleNormalizer as WebAnimationsStyleNormalizer, ɵAnimationEngine as AnimationEngine } from '@angular/animations/browser';
import { ɵAnimationRendererFactory as AnimationRendererFactory, ɵBrowserAnimationBuilder as BrowserAnimationBuilder } from '@angular/platform-browser/animations';
// import { NativeScriptModule } from "../nativescript.module";
import { NativeScriptRendererFactory } from '../nativescript-renderer';
import { NativeScriptAnimationDriver } from './animation-driver';
import { throwIfAlreadyLoaded } from '../utils/general';
import { NativeScriptCommonModule } from '../nativescript-common.module';
import * as i0 from "@angular/core";
import * as i1 from "@angular/animations/browser";
export class InjectableAnimationEngine extends AnimationEngine {
    constructor(doc, driver, normalizer) {
        super(doc.body, driver, normalizer);
    }
}
InjectableAnimationEngine.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: InjectableAnimationEngine, deps: [{ token: DOCUMENT }, { token: i1.AnimationDriver }, { token: i1.ɵAnimationStyleNormalizer }], target: i0.ɵɵFactoryTarget.Injectable });
InjectableAnimationEngine.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: InjectableAnimationEngine });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: InjectableAnimationEngine, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [DOCUMENT]
                }] }, { type: i1.AnimationDriver }, { type: i1.ɵAnimationStyleNormalizer }]; } });
export function instantiateSupportedAnimationDriver() {
    return new NativeScriptAnimationDriver();
}
export function instantiateRendererFactory(renderer, engine, zone) {
    return new AnimationRendererFactory(renderer, engine, zone);
}
export function instantiateDefaultStyleNormalizer() {
    return new WebAnimationsStyleNormalizer();
}
export class NativeScriptAnimationsModule {
    constructor(parentModule) {
        // Prevents NativeScriptAnimationsModule from getting imported multiple times
        throwIfAlreadyLoaded(parentModule, 'NativeScriptAnimationsModule');
    }
}
NativeScriptAnimationsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: NativeScriptAnimationsModule, deps: [{ token: NativeScriptAnimationsModule, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.NgModule });
NativeScriptAnimationsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "14.2.3", ngImport: i0, type: NativeScriptAnimationsModule, imports: [NativeScriptCommonModule] });
NativeScriptAnimationsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: NativeScriptAnimationsModule, providers: [
        {
            provide: AnimationDriver,
            useFactory: instantiateSupportedAnimationDriver,
        },
        { provide: AnimationBuilder, useClass: BrowserAnimationBuilder },
        {
            provide: AnimationStyleNormalizer,
            useFactory: instantiateDefaultStyleNormalizer,
        },
        { provide: AnimationEngine, useClass: InjectableAnimationEngine },
        {
            provide: RendererFactory2,
            useFactory: instantiateRendererFactory,
            deps: [NativeScriptRendererFactory, AnimationEngine, NgZone],
        },
    ], imports: [NativeScriptCommonModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: NativeScriptAnimationsModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [NativeScriptCommonModule],
                    providers: [
                        {
                            provide: AnimationDriver,
                            useFactory: instantiateSupportedAnimationDriver,
                        },
                        { provide: AnimationBuilder, useClass: BrowserAnimationBuilder },
                        {
                            provide: AnimationStyleNormalizer,
                            useFactory: instantiateDefaultStyleNormalizer,
                        },
                        { provide: AnimationEngine, useClass: InjectableAnimationEngine },
                        {
                            provide: RendererFactory2,
                            useFactory: instantiateRendererFactory,
                            deps: [NativeScriptRendererFactory, AnimationEngine, NgZone],
                        },
                    ],
                }]
        }], ctorParameters: function () { return [{ type: NativeScriptAnimationsModule, decorators: [{
                    type: Optional
                }, {
                    type: SkipSelf
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5pbWF0aW9ucy5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9hbmd1bGFyL3NyYy9saWIvYW5pbWF0aW9ucy9hbmltYXRpb25zLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLGdCQUFnQixFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0csT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQzNDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRXZELE9BQU8sRUFBRSxlQUFlLEVBQUUseUJBQXlCLElBQUksd0JBQXdCLEVBQUUsNkJBQTZCLElBQUksNEJBQTRCLEVBQUUsZ0JBQWdCLElBQUksZUFBZSxFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFFek4sT0FBTyxFQUFFLHlCQUF5QixJQUFJLHdCQUF3QixFQUFFLHdCQUF3QixJQUFJLHVCQUF1QixFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFFbEssK0RBQStEO0FBQy9ELE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ3ZFLE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ2pFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ3hELE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLCtCQUErQixDQUFDOzs7QUFHekUsTUFBTSxPQUFPLHlCQUEwQixTQUFRLGVBQWU7SUFDNUQsWUFBOEIsR0FBUSxFQUFFLE1BQXVCLEVBQUUsVUFBb0M7UUFDbkcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUUsTUFBTSxFQUFFLFVBQVUsQ0FBQyxDQUFDO0lBQ3RDLENBQUM7O3NIQUhVLHlCQUF5QixrQkFDaEIsUUFBUTswSEFEakIseUJBQXlCOzJGQUF6Qix5QkFBeUI7a0JBRHJDLFVBQVU7OzBCQUVJLE1BQU07MkJBQUMsUUFBUTs7QUFLOUIsTUFBTSxVQUFVLG1DQUFtQztJQUNqRCxPQUFPLElBQUksMkJBQTJCLEVBQUUsQ0FBQztBQUMzQyxDQUFDO0FBRUQsTUFBTSxVQUFVLDBCQUEwQixDQUFDLFFBQXFDLEVBQUUsTUFBdUIsRUFBRSxJQUFZO0lBQ3JILE9BQU8sSUFBSSx3QkFBd0IsQ0FBQyxRQUFRLEVBQUUsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQzlELENBQUM7QUFFRCxNQUFNLFVBQVUsaUNBQWlDO0lBQy9DLE9BQU8sSUFBSSw0QkFBNEIsRUFBRSxDQUFDO0FBQzVDLENBQUM7QUFzQkQsTUFBTSxPQUFPLDRCQUE0QjtJQUN2QyxZQUFvQyxZQUEwQztRQUM1RSw2RUFBNkU7UUFDN0Usb0JBQW9CLENBQUMsWUFBWSxFQUFFLDhCQUE4QixDQUFDLENBQUM7SUFDckUsQ0FBQzs7eUhBSlUsNEJBQTRCOzBIQUE1Qiw0QkFBNEIsWUFuQjdCLHdCQUF3QjswSEFtQnZCLDRCQUE0QixhQWxCNUI7UUFDVDtZQUNFLE9BQU8sRUFBRSxlQUFlO1lBQ3hCLFVBQVUsRUFBRSxtQ0FBbUM7U0FDaEQ7UUFDRCxFQUFFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxRQUFRLEVBQUUsdUJBQXVCLEVBQUU7UUFDaEU7WUFDRSxPQUFPLEVBQUUsd0JBQXdCO1lBQ2pDLFVBQVUsRUFBRSxpQ0FBaUM7U0FDOUM7UUFDRCxFQUFFLE9BQU8sRUFBRSxlQUFlLEVBQUUsUUFBUSxFQUFFLHlCQUF5QixFQUFFO1FBQ2pFO1lBQ0UsT0FBTyxFQUFFLGdCQUFnQjtZQUN6QixVQUFVLEVBQUUsMEJBQTBCO1lBQ3RDLElBQUksRUFBRSxDQUFDLDJCQUEyQixFQUFFLGVBQWUsRUFBRSxNQUFNLENBQUM7U0FDN0Q7S0FDRixZQWpCUyx3QkFBd0I7MkZBbUJ2Qiw0QkFBNEI7a0JBcEJ4QyxRQUFRO21CQUFDO29CQUNSLE9BQU8sRUFBRSxDQUFDLHdCQUF3QixDQUFDO29CQUNuQyxTQUFTLEVBQUU7d0JBQ1Q7NEJBQ0UsT0FBTyxFQUFFLGVBQWU7NEJBQ3hCLFVBQVUsRUFBRSxtQ0FBbUM7eUJBQ2hEO3dCQUNELEVBQUUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLFFBQVEsRUFBRSx1QkFBdUIsRUFBRTt3QkFDaEU7NEJBQ0UsT0FBTyxFQUFFLHdCQUF3Qjs0QkFDakMsVUFBVSxFQUFFLGlDQUFpQzt5QkFDOUM7d0JBQ0QsRUFBRSxPQUFPLEVBQUUsZUFBZSxFQUFFLFFBQVEsRUFBRSx5QkFBeUIsRUFBRTt3QkFDakU7NEJBQ0UsT0FBTyxFQUFFLGdCQUFnQjs0QkFDekIsVUFBVSxFQUFFLDBCQUEwQjs0QkFDdEMsSUFBSSxFQUFFLENBQUMsMkJBQTJCLEVBQUUsZUFBZSxFQUFFLE1BQU0sQ0FBQzt5QkFDN0Q7cUJBQ0Y7aUJBQ0Y7OzBCQUVjLFFBQVE7OzBCQUFJLFFBQVEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSwgSW5qZWN0YWJsZSwgSW5qZWN0LCBOZ1pvbmUsIFJlbmRlcmVyRmFjdG9yeTIsIE9wdGlvbmFsLCBTa2lwU2VsZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRE9DVU1FTlQgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgQW5pbWF0aW9uQnVpbGRlciB9IGZyb20gJ0Bhbmd1bGFyL2FuaW1hdGlvbnMnO1xuXG5pbXBvcnQgeyBBbmltYXRpb25Ecml2ZXIsIMm1QW5pbWF0aW9uU3R5bGVOb3JtYWxpemVyIGFzIEFuaW1hdGlvblN0eWxlTm9ybWFsaXplciwgybVXZWJBbmltYXRpb25zU3R5bGVOb3JtYWxpemVyIGFzIFdlYkFuaW1hdGlvbnNTdHlsZU5vcm1hbGl6ZXIsIMm1QW5pbWF0aW9uRW5naW5lIGFzIEFuaW1hdGlvbkVuZ2luZSB9IGZyb20gJ0Bhbmd1bGFyL2FuaW1hdGlvbnMvYnJvd3Nlcic7XG5cbmltcG9ydCB7IMm1QW5pbWF0aW9uUmVuZGVyZXJGYWN0b3J5IGFzIEFuaW1hdGlvblJlbmRlcmVyRmFjdG9yeSwgybVCcm93c2VyQW5pbWF0aW9uQnVpbGRlciBhcyBCcm93c2VyQW5pbWF0aW9uQnVpbGRlciB9IGZyb20gJ0Bhbmd1bGFyL3BsYXRmb3JtLWJyb3dzZXIvYW5pbWF0aW9ucyc7XG5cbi8vIGltcG9ydCB7IE5hdGl2ZVNjcmlwdE1vZHVsZSB9IGZyb20gXCIuLi9uYXRpdmVzY3JpcHQubW9kdWxlXCI7XG5pbXBvcnQgeyBOYXRpdmVTY3JpcHRSZW5kZXJlckZhY3RvcnkgfSBmcm9tICcuLi9uYXRpdmVzY3JpcHQtcmVuZGVyZXInO1xuaW1wb3J0IHsgTmF0aXZlU2NyaXB0QW5pbWF0aW9uRHJpdmVyIH0gZnJvbSAnLi9hbmltYXRpb24tZHJpdmVyJztcbmltcG9ydCB7IHRocm93SWZBbHJlYWR5TG9hZGVkIH0gZnJvbSAnLi4vdXRpbHMvZ2VuZXJhbCc7XG5pbXBvcnQgeyBOYXRpdmVTY3JpcHRDb21tb25Nb2R1bGUgfSBmcm9tICcuLi9uYXRpdmVzY3JpcHQtY29tbW9uLm1vZHVsZSc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBJbmplY3RhYmxlQW5pbWF0aW9uRW5naW5lIGV4dGVuZHMgQW5pbWF0aW9uRW5naW5lIHtcbiAgY29uc3RydWN0b3IoQEluamVjdChET0NVTUVOVCkgZG9jOiBhbnksIGRyaXZlcjogQW5pbWF0aW9uRHJpdmVyLCBub3JtYWxpemVyOiBBbmltYXRpb25TdHlsZU5vcm1hbGl6ZXIpIHtcbiAgICBzdXBlcihkb2MuYm9keSwgZHJpdmVyLCBub3JtYWxpemVyKTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gaW5zdGFudGlhdGVTdXBwb3J0ZWRBbmltYXRpb25Ecml2ZXIoKSB7XG4gIHJldHVybiBuZXcgTmF0aXZlU2NyaXB0QW5pbWF0aW9uRHJpdmVyKCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpbnN0YW50aWF0ZVJlbmRlcmVyRmFjdG9yeShyZW5kZXJlcjogTmF0aXZlU2NyaXB0UmVuZGVyZXJGYWN0b3J5LCBlbmdpbmU6IEFuaW1hdGlvbkVuZ2luZSwgem9uZTogTmdab25lKSB7XG4gIHJldHVybiBuZXcgQW5pbWF0aW9uUmVuZGVyZXJGYWN0b3J5KHJlbmRlcmVyLCBlbmdpbmUsIHpvbmUpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaW5zdGFudGlhdGVEZWZhdWx0U3R5bGVOb3JtYWxpemVyKCkge1xuICByZXR1cm4gbmV3IFdlYkFuaW1hdGlvbnNTdHlsZU5vcm1hbGl6ZXIoKTtcbn1cblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW05hdGl2ZVNjcmlwdENvbW1vbk1vZHVsZV0sXG4gIHByb3ZpZGVyczogW1xuICAgIHtcbiAgICAgIHByb3ZpZGU6IEFuaW1hdGlvbkRyaXZlcixcbiAgICAgIHVzZUZhY3Rvcnk6IGluc3RhbnRpYXRlU3VwcG9ydGVkQW5pbWF0aW9uRHJpdmVyLFxuICAgIH0sXG4gICAgeyBwcm92aWRlOiBBbmltYXRpb25CdWlsZGVyLCB1c2VDbGFzczogQnJvd3NlckFuaW1hdGlvbkJ1aWxkZXIgfSxcbiAgICB7XG4gICAgICBwcm92aWRlOiBBbmltYXRpb25TdHlsZU5vcm1hbGl6ZXIsXG4gICAgICB1c2VGYWN0b3J5OiBpbnN0YW50aWF0ZURlZmF1bHRTdHlsZU5vcm1hbGl6ZXIsXG4gICAgfSxcbiAgICB7IHByb3ZpZGU6IEFuaW1hdGlvbkVuZ2luZSwgdXNlQ2xhc3M6IEluamVjdGFibGVBbmltYXRpb25FbmdpbmUgfSxcbiAgICB7XG4gICAgICBwcm92aWRlOiBSZW5kZXJlckZhY3RvcnkyLFxuICAgICAgdXNlRmFjdG9yeTogaW5zdGFudGlhdGVSZW5kZXJlckZhY3RvcnksXG4gICAgICBkZXBzOiBbTmF0aXZlU2NyaXB0UmVuZGVyZXJGYWN0b3J5LCBBbmltYXRpb25FbmdpbmUsIE5nWm9uZV0sXG4gICAgfSxcbiAgXSxcbn0pXG5leHBvcnQgY2xhc3MgTmF0aXZlU2NyaXB0QW5pbWF0aW9uc01vZHVsZSB7XG4gIGNvbnN0cnVjdG9yKEBPcHRpb25hbCgpIEBTa2lwU2VsZigpIHBhcmVudE1vZHVsZTogTmF0aXZlU2NyaXB0QW5pbWF0aW9uc01vZHVsZSkge1xuICAgIC8vIFByZXZlbnRzIE5hdGl2ZVNjcmlwdEFuaW1hdGlvbnNNb2R1bGUgZnJvbSBnZXR0aW5nIGltcG9ydGVkIG11bHRpcGxlIHRpbWVzXG4gICAgdGhyb3dJZkFscmVhZHlMb2FkZWQocGFyZW50TW9kdWxlLCAnTmF0aXZlU2NyaXB0QW5pbWF0aW9uc01vZHVsZScpO1xuICB9XG59XG4iXX0=