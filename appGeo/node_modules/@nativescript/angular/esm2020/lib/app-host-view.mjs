import { ContentView, ProxyViewContainer, GridLayout, Application } from '@nativescript/core';
export class AppHostView extends ContentView {
    constructor(backgroundColor) {
        super();
        this.timeout = -1;
        this.backgroundColor = backgroundColor;
    }
    get ngAppRoot() {
        return this._ngAppRoot;
    }
    set ngAppRoot(value) {
        this._ngAppRoot = value;
    }
    //@ts-ignore
    get content() {
        return this._content;
    }
    set content(value) {
        if (this._content) {
            this._content.parentNode = undefined;
        }
        this._content = value;
        if (value) {
            this._content.parentNode = this;
        }
        this.ngAppRoot = value;
        if (this._content instanceof ProxyViewContainer) {
            const grid = new GridLayout();
            grid.backgroundColor = this.backgroundColor;
            grid.addChild(this._content);
            this.ngAppRoot = grid;
        }
        if (this.ngAppRoot) {
            // maybe use this approach
            // this.scheduleRootChange();
        }
    }
    scheduleRootChange() {
        if (this.timeout === -1) {
            this.timeout = setTimeout(() => {
                //console.log(this.ngAppRoot);
                Application.resetRootView({
                    create: () => this.content
                });
                this.timeout = -1;
            }, 0);
        }
    }
}
export class AppHostAsyncView extends GridLayout {
    constructor(backgroundColor) {
        super();
        this.backgroundColor = backgroundColor;
    }
    get ngAppRoot() {
        return this;
    }
    set ngAppRoot(value) {
        // ignored
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLWhvc3Qtdmlldy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL2FuZ3VsYXIvc3JjL2xpYi9hcHAtaG9zdC12aWV3LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxXQUFXLEVBQVEsa0JBQWtCLEVBQUUsVUFBVSxFQUFTLFdBQVcsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRTNHLE1BQU0sT0FBTyxXQUFZLFNBQVEsV0FBVztJQUszQyxZQUFZLGVBQXNCO1FBQ2pDLEtBQUssRUFBRSxDQUFDO1FBSEQsWUFBTyxHQUFRLENBQUMsQ0FBQyxDQUFDO1FBSXpCLElBQUksQ0FBQyxlQUFlLEdBQUcsZUFBZSxDQUFDO0lBQ3hDLENBQUM7SUFFRCxJQUFJLFNBQVM7UUFDWixPQUFPLElBQUksQ0FBQyxVQUFVLENBQUM7SUFDeEIsQ0FBQztJQUVELElBQUksU0FBUyxDQUFDLEtBQVc7UUFDeEIsSUFBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUM7SUFDdEIsQ0FBQztJQUNELFlBQVk7SUFDZixJQUFJLE9BQU87UUFDVixPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDdEIsQ0FBQztJQUVELElBQUksT0FBTyxDQUFDLEtBQVc7UUFDdEIsSUFBSSxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQ2xCLElBQUksQ0FBQyxRQUFRLENBQUMsVUFBVSxHQUFHLFNBQVMsQ0FBQztTQUNyQztRQUVELElBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO1FBRXRCLElBQUksS0FBSyxFQUFFO1lBQ1YsSUFBSSxDQUFDLFFBQVEsQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDO1NBQ2hDO1FBRUQsSUFBSSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUM7UUFFdkIsSUFBSSxJQUFJLENBQUMsUUFBUSxZQUFZLGtCQUFrQixFQUFFO1lBQ2hELE1BQU0sSUFBSSxHQUFHLElBQUksVUFBVSxFQUFFLENBQUM7WUFDOUIsSUFBSSxDQUFDLGVBQWUsR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDO1lBQzVDLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQzdCLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO1NBQ3RCO1FBQ0QsSUFBRyxJQUFJLENBQUMsU0FBUyxFQUFFO1lBQ2xCLDBCQUEwQjtZQUMxQiw2QkFBNkI7U0FDN0I7SUFDRixDQUFDO0lBRUQsa0JBQWtCO1FBQ2pCLElBQUcsSUFBSSxDQUFDLE9BQU8sS0FBSyxDQUFDLENBQUMsRUFBRTtZQUN2QixJQUFJLENBQUMsT0FBTyxHQUFHLFVBQVUsQ0FBQyxHQUFHLEVBQUU7Z0JBQzlCLDhCQUE4QjtnQkFDOUIsV0FBVyxDQUFDLGFBQWEsQ0FBQztvQkFDekIsTUFBTSxFQUFFLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxPQUFPO2lCQUMxQixDQUFDLENBQUM7Z0JBQ0gsSUFBSSxDQUFDLE9BQU8sR0FBRyxDQUFDLENBQUMsQ0FBQztZQUNuQixDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7U0FDTjtJQUNGLENBQUM7Q0FDRDtBQUVELE1BQU0sT0FBTyxnQkFBaUIsU0FBUSxVQUFVO0lBQy9DLFlBQVksZUFBc0I7UUFDakMsS0FBSyxFQUFFLENBQUM7UUFDUixJQUFJLENBQUMsZUFBZSxHQUFHLGVBQWUsQ0FBQztJQUN4QyxDQUFDO0lBRUQsSUFBSSxTQUFTO1FBQ1osT0FBTyxJQUFJLENBQUM7SUFDYixDQUFDO0lBRUQsSUFBSSxTQUFTLENBQUMsS0FBVztRQUN4QixVQUFVO0lBQ1gsQ0FBQztDQUNEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29udGVudFZpZXcsIFZpZXcsIFByb3h5Vmlld0NvbnRhaW5lciwgR3JpZExheW91dCwgQ29sb3IsIEFwcGxpY2F0aW9uIH0gZnJvbSAnQG5hdGl2ZXNjcmlwdC9jb3JlJztcblxuZXhwb3J0IGNsYXNzIEFwcEhvc3RWaWV3IGV4dGVuZHMgQ29udGVudFZpZXcge1xuXHRwcml2YXRlIF9uZ0FwcFJvb3Q6IFZpZXc7XG5cdHByaXZhdGUgX2NvbnRlbnQ6IFZpZXc7XG5cdHByaXZhdGUgdGltZW91dDogYW55ID0gLTE7XG5cblx0Y29uc3RydWN0b3IoYmFja2dyb3VuZENvbG9yOiBDb2xvcikge1xuXHRcdHN1cGVyKCk7XG5cdFx0dGhpcy5iYWNrZ3JvdW5kQ29sb3IgPSBiYWNrZ3JvdW5kQ29sb3I7XG5cdH1cblxuXHRnZXQgbmdBcHBSb290KCk6IFZpZXcge1xuXHRcdHJldHVybiB0aGlzLl9uZ0FwcFJvb3Q7XG5cdH1cblxuXHRzZXQgbmdBcHBSb290KHZhbHVlOiBWaWV3KSB7XG5cdFx0dGhpcy5fbmdBcHBSb290ID0gdmFsdWU7XG4gICAgfVxuICAgIC8vQHRzLWlnbm9yZVxuXHRnZXQgY29udGVudCgpOiBWaWV3IHtcblx0XHRyZXR1cm4gdGhpcy5fY29udGVudDtcblx0fVxuXG5cdHNldCBjb250ZW50KHZhbHVlOiBWaWV3KSB7XG5cdFx0aWYgKHRoaXMuX2NvbnRlbnQpIHtcblx0XHRcdHRoaXMuX2NvbnRlbnQucGFyZW50Tm9kZSA9IHVuZGVmaW5lZDtcblx0XHR9XG5cblx0XHR0aGlzLl9jb250ZW50ID0gdmFsdWU7XG5cblx0XHRpZiAodmFsdWUpIHtcblx0XHRcdHRoaXMuX2NvbnRlbnQucGFyZW50Tm9kZSA9IHRoaXM7XG5cdFx0fVxuXG5cdFx0dGhpcy5uZ0FwcFJvb3QgPSB2YWx1ZTtcblxuXHRcdGlmICh0aGlzLl9jb250ZW50IGluc3RhbmNlb2YgUHJveHlWaWV3Q29udGFpbmVyKSB7XG5cdFx0XHRjb25zdCBncmlkID0gbmV3IEdyaWRMYXlvdXQoKTtcblx0XHRcdGdyaWQuYmFja2dyb3VuZENvbG9yID0gdGhpcy5iYWNrZ3JvdW5kQ29sb3I7XG5cdFx0XHRncmlkLmFkZENoaWxkKHRoaXMuX2NvbnRlbnQpO1xuXHRcdFx0dGhpcy5uZ0FwcFJvb3QgPSBncmlkO1xuXHRcdH1cblx0XHRpZih0aGlzLm5nQXBwUm9vdCkge1xuXHRcdFx0Ly8gbWF5YmUgdXNlIHRoaXMgYXBwcm9hY2hcblx0XHRcdC8vIHRoaXMuc2NoZWR1bGVSb290Q2hhbmdlKCk7XG5cdFx0fVxuXHR9XG5cblx0c2NoZWR1bGVSb290Q2hhbmdlKCkge1xuXHRcdGlmKHRoaXMudGltZW91dCA9PT0gLTEpIHtcblx0XHRcdHRoaXMudGltZW91dCA9IHNldFRpbWVvdXQoKCkgPT4ge1xuXHRcdFx0XHQvL2NvbnNvbGUubG9nKHRoaXMubmdBcHBSb290KTtcblx0XHRcdFx0QXBwbGljYXRpb24ucmVzZXRSb290Vmlldyh7XG5cdFx0XHRcdFx0Y3JlYXRlOiAoKSA9PiB0aGlzLmNvbnRlbnRcblx0XHRcdFx0fSk7XG5cdFx0XHRcdHRoaXMudGltZW91dCA9IC0xO1xuXHRcdFx0fSwgMCk7XG5cdFx0fVxuXHR9XG59XG5cbmV4cG9ydCBjbGFzcyBBcHBIb3N0QXN5bmNWaWV3IGV4dGVuZHMgR3JpZExheW91dCB7XG5cdGNvbnN0cnVjdG9yKGJhY2tncm91bmRDb2xvcjogQ29sb3IpIHtcblx0XHRzdXBlcigpO1xuXHRcdHRoaXMuYmFja2dyb3VuZENvbG9yID0gYmFja2dyb3VuZENvbG9yO1xuXHR9XG5cblx0Z2V0IG5nQXBwUm9vdCgpOiBWaWV3IHtcblx0XHRyZXR1cm4gdGhpcztcblx0fVxuXG5cdHNldCBuZ0FwcFJvb3QodmFsdWU6IFZpZXcpIHtcblx0XHQvLyBpZ25vcmVkXG5cdH1cbn1cbiJdfQ==