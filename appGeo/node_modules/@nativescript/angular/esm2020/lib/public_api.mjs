export * from './views';
export * from './tokens';
export * from './property-filter';
export * from './view-refs';
export * from './app-host-view';
export { COMMON_PROVIDERS, NativeScriptDocument, NativeScriptSanitizer, defaultPageFactoryProvider, platformNativeScriptDynamic, platformNativeScript } from './platform-nativescript';
export * from './cdk/detached-loader';
export { NATIVESCRIPT_MODULE_PROVIDERS, NATIVESCRIPT_MODULE_STATIC_PROVIDERS, NativeScriptModule, errorHandler, generateFallbackRootView, generateRandomId } from './nativescript';
export { ActionBarComponent, ActionBarScope, ActionItemDirective, NavigationButtonDirective } from './cdk/action-bar';
// export * from './cdk/dialog';
export * from './cdk/frame-page';
export * from './rootcomposite.module';
export * from './cdk/list-view';
export * from './cdk/portal';
export * from './cdk/dialog';
export * from './cdk/tab-view';
export * from './cdk/platform-filters/android-filter.component';
export * from './cdk/platform-filters/ios-filter.component';
export * from './file-system';
export * from './nativescript-common.module';
export * from './loading.service';
export * from './detached-loader-utils';
// export * from './router/router.module';
export { disableRootViewHanding, onAfterLivesync, onBeforeLivesync, postAngularBootstrap$, preAngularDisposal$, runNativeScriptAngularApp } from './application';
export * from './element-registry';
export * from './nativescript-xhr-factory';
export { EmulatedRenderer, NativeScriptRendererFactory, COMPONENT_VARIABLE as ɵCOMPONENT_VARIABLE, CONTENT_ATTR as ɵCONTENT_ATTR, HOST_ATTR as ɵHOST_ATTR } from './nativescript-renderer';
export * from './utils';
export * from './forms';
export * from './animations';
export * from './http';
export * from './legacy';
export { NativeScriptDebug as ɵNativeScriptAngularDebug } from './trace';
export * from './nativescript-ng-zone';
export * from './private-exports';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljX2FwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL2FuZ3VsYXIvc3JjL2xpYi9wdWJsaWNfYXBpLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGNBQWMsU0FBUyxDQUFDO0FBQ3hCLGNBQWMsVUFBVSxDQUFDO0FBQ3pCLGNBQWMsbUJBQW1CLENBQUM7QUFDbEMsY0FBYyxhQUFhLENBQUM7QUFDNUIsY0FBYyxpQkFBaUIsQ0FBQztBQUNoQyxPQUFPLEVBQWMsZ0JBQWdCLEVBQWMsb0JBQW9CLEVBQUUscUJBQXFCLEVBQUUsMEJBQTBCLEVBQUUsMkJBQTJCLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUMvTSxjQUFjLHVCQUF1QixDQUFDO0FBQ3RDLE9BQU8sRUFBRSw2QkFBNkIsRUFBRSxvQ0FBb0MsRUFBRSxrQkFBa0IsRUFBRSxZQUFZLEVBQUUsd0JBQXdCLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNuTCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsY0FBYyxFQUFFLG1CQUFtQixFQUFFLHlCQUF5QixFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDdEgsZ0NBQWdDO0FBQ2hDLGNBQWMsa0JBQWtCLENBQUM7QUFDakMsY0FBYyx3QkFBd0IsQ0FBQztBQUN2QyxjQUFjLGlCQUFpQixDQUFDO0FBQ2hDLGNBQWMsY0FBYyxDQUFDO0FBQzdCLGNBQWMsY0FBYyxDQUFDO0FBQzdCLGNBQWMsZ0JBQWdCLENBQUM7QUFDL0IsY0FBYyxpREFBaUQsQ0FBQztBQUNoRSxjQUFjLDZDQUE2QyxDQUFDO0FBQzVELGNBQWMsZUFBZSxDQUFDO0FBQzlCLGNBQWMsOEJBQThCLENBQUM7QUFDN0MsY0FBYyxtQkFBbUIsQ0FBQztBQUNsQyxjQUFjLHlCQUF5QixDQUFDO0FBQ3hDLDBDQUEwQztBQUMxQyxPQUFPLEVBQStELHNCQUFzQixFQUFFLGVBQWUsRUFBRSxnQkFBZ0IsRUFBRSxxQkFBcUIsRUFBRSxtQkFBbUIsRUFBRSx5QkFBeUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM5TixjQUFjLG9CQUFvQixDQUFDO0FBQ25DLGNBQWMsNEJBQTRCLENBQUM7QUFDM0MsT0FBTyxFQUFFLGdCQUFnQixFQUFFLDJCQUEyQixFQUFFLGtCQUFrQixJQUFJLG1CQUFtQixFQUFFLFlBQVksSUFBSSxhQUFhLEVBQUUsU0FBUyxJQUFJLFVBQVUsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQzNMLGNBQWMsU0FBUyxDQUFDO0FBQ3hCLGNBQWMsU0FBUyxDQUFDO0FBQ3hCLGNBQWMsY0FBYyxDQUFDO0FBQzdCLGNBQWMsUUFBUSxDQUFDO0FBQ3ZCLGNBQWMsVUFBVSxDQUFDO0FBQ3pCLE9BQU8sRUFBRSxpQkFBaUIsSUFBSSx5QkFBeUIsRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUN6RSxjQUFjLHdCQUF3QixDQUFDO0FBQ3ZDLGNBQWMsbUJBQW1CLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tICcuL3ZpZXdzJztcbmV4cG9ydCAqIGZyb20gJy4vdG9rZW5zJztcbmV4cG9ydCAqIGZyb20gJy4vcHJvcGVydHktZmlsdGVyJztcbmV4cG9ydCAqIGZyb20gJy4vdmlldy1yZWZzJztcbmV4cG9ydCAqIGZyb20gJy4vYXBwLWhvc3Qtdmlldyc7XG5leHBvcnQgeyBBcHBPcHRpb25zLCBDT01NT05fUFJPVklERVJTLCBIbXJPcHRpb25zLCBOYXRpdmVTY3JpcHREb2N1bWVudCwgTmF0aXZlU2NyaXB0U2FuaXRpemVyLCBkZWZhdWx0UGFnZUZhY3RvcnlQcm92aWRlciwgcGxhdGZvcm1OYXRpdmVTY3JpcHREeW5hbWljLCBwbGF0Zm9ybU5hdGl2ZVNjcmlwdCB9IGZyb20gJy4vcGxhdGZvcm0tbmF0aXZlc2NyaXB0JztcbmV4cG9ydCAqIGZyb20gJy4vY2RrL2RldGFjaGVkLWxvYWRlcic7XG5leHBvcnQgeyBOQVRJVkVTQ1JJUFRfTU9EVUxFX1BST1ZJREVSUywgTkFUSVZFU0NSSVBUX01PRFVMRV9TVEFUSUNfUFJPVklERVJTLCBOYXRpdmVTY3JpcHRNb2R1bGUsIGVycm9ySGFuZGxlciwgZ2VuZXJhdGVGYWxsYmFja1Jvb3RWaWV3LCBnZW5lcmF0ZVJhbmRvbUlkIH0gZnJvbSAnLi9uYXRpdmVzY3JpcHQnO1xuZXhwb3J0IHsgQWN0aW9uQmFyQ29tcG9uZW50LCBBY3Rpb25CYXJTY29wZSwgQWN0aW9uSXRlbURpcmVjdGl2ZSwgTmF2aWdhdGlvbkJ1dHRvbkRpcmVjdGl2ZSB9IGZyb20gJy4vY2RrL2FjdGlvbi1iYXInO1xuLy8gZXhwb3J0ICogZnJvbSAnLi9jZGsvZGlhbG9nJztcbmV4cG9ydCAqIGZyb20gJy4vY2RrL2ZyYW1lLXBhZ2UnO1xuZXhwb3J0ICogZnJvbSAnLi9yb290Y29tcG9zaXRlLm1vZHVsZSc7XG5leHBvcnQgKiBmcm9tICcuL2Nkay9saXN0LXZpZXcnO1xuZXhwb3J0ICogZnJvbSAnLi9jZGsvcG9ydGFsJztcbmV4cG9ydCAqIGZyb20gJy4vY2RrL2RpYWxvZyc7XG5leHBvcnQgKiBmcm9tICcuL2Nkay90YWItdmlldyc7XG5leHBvcnQgKiBmcm9tICcuL2Nkay9wbGF0Zm9ybS1maWx0ZXJzL2FuZHJvaWQtZmlsdGVyLmNvbXBvbmVudCc7XG5leHBvcnQgKiBmcm9tICcuL2Nkay9wbGF0Zm9ybS1maWx0ZXJzL2lvcy1maWx0ZXIuY29tcG9uZW50JztcbmV4cG9ydCAqIGZyb20gJy4vZmlsZS1zeXN0ZW0nO1xuZXhwb3J0ICogZnJvbSAnLi9uYXRpdmVzY3JpcHQtY29tbW9uLm1vZHVsZSc7XG5leHBvcnQgKiBmcm9tICcuL2xvYWRpbmcuc2VydmljZSc7XG5leHBvcnQgKiBmcm9tICcuL2RldGFjaGVkLWxvYWRlci11dGlscyc7XG4vLyBleHBvcnQgKiBmcm9tICcuL3JvdXRlci9yb3V0ZXIubW9kdWxlJztcbmV4cG9ydCB7IEFwcExhdW5jaFZpZXcsIEFwcFJ1bk9wdGlvbnMsIE5nTW9kdWxlRXZlbnQsIE5nTW9kdWxlUmVhc29uLCBkaXNhYmxlUm9vdFZpZXdIYW5kaW5nLCBvbkFmdGVyTGl2ZXN5bmMsIG9uQmVmb3JlTGl2ZXN5bmMsIHBvc3RBbmd1bGFyQm9vdHN0cmFwJCwgcHJlQW5ndWxhckRpc3Bvc2FsJCwgcnVuTmF0aXZlU2NyaXB0QW5ndWxhckFwcCB9IGZyb20gJy4vYXBwbGljYXRpb24nO1xuZXhwb3J0ICogZnJvbSAnLi9lbGVtZW50LXJlZ2lzdHJ5JztcbmV4cG9ydCAqIGZyb20gJy4vbmF0aXZlc2NyaXB0LXhoci1mYWN0b3J5JztcbmV4cG9ydCB7IEVtdWxhdGVkUmVuZGVyZXIsIE5hdGl2ZVNjcmlwdFJlbmRlcmVyRmFjdG9yeSwgQ09NUE9ORU5UX1ZBUklBQkxFIGFzIMm1Q09NUE9ORU5UX1ZBUklBQkxFLCBDT05URU5UX0FUVFIgYXMgybVDT05URU5UX0FUVFIsIEhPU1RfQVRUUiBhcyDJtUhPU1RfQVRUUiB9IGZyb20gJy4vbmF0aXZlc2NyaXB0LXJlbmRlcmVyJztcbmV4cG9ydCAqIGZyb20gJy4vdXRpbHMnO1xuZXhwb3J0ICogZnJvbSAnLi9mb3Jtcyc7XG5leHBvcnQgKiBmcm9tICcuL2FuaW1hdGlvbnMnO1xuZXhwb3J0ICogZnJvbSAnLi9odHRwJztcbmV4cG9ydCAqIGZyb20gJy4vbGVnYWN5JztcbmV4cG9ydCB7IE5hdGl2ZVNjcmlwdERlYnVnIGFzIMm1TmF0aXZlU2NyaXB0QW5ndWxhckRlYnVnIH0gZnJvbSAnLi90cmFjZSc7XG5leHBvcnQgKiBmcm9tICcuL25hdGl2ZXNjcmlwdC1uZy16b25lJztcbmV4cG9ydCAqIGZyb20gJy4vcHJpdmF0ZS1leHBvcnRzJztcbiJdfQ==