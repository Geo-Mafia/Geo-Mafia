import { NgModule } from '@angular/core';
import { FormsModule } from '@angular/forms';
import { TextValueAccessor, CheckedValueAccessor, DateValueAccessor, TimeValueAccessor, NumberValueAccessor, SelectedIndexValueAccessor } from './value-accessors';
import * as i0 from "@angular/core";
export * from './value-accessors';
export class NativeScriptFormsModule {
}
NativeScriptFormsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: NativeScriptFormsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NativeScriptFormsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "14.2.3", ngImport: i0, type: NativeScriptFormsModule, declarations: [TextValueAccessor, CheckedValueAccessor, DateValueAccessor, TimeValueAccessor, SelectedIndexValueAccessor, NumberValueAccessor], imports: [FormsModule], exports: [FormsModule, TextValueAccessor, CheckedValueAccessor, DateValueAccessor, TimeValueAccessor, SelectedIndexValueAccessor, NumberValueAccessor] });
NativeScriptFormsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: NativeScriptFormsModule, imports: [FormsModule, FormsModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: NativeScriptFormsModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [TextValueAccessor, CheckedValueAccessor, DateValueAccessor, TimeValueAccessor, SelectedIndexValueAccessor, NumberValueAccessor],
                    providers: [],
                    imports: [FormsModule],
                    exports: [FormsModule, TextValueAccessor, CheckedValueAccessor, DateValueAccessor, TimeValueAccessor, SelectedIndexValueAccessor, NumberValueAccessor],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybXMubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvYW5ndWxhci9zcmMvbGliL2Zvcm1zL2Zvcm1zLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3QyxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsb0JBQW9CLEVBQUUsaUJBQWlCLEVBQUUsaUJBQWlCLEVBQUUsbUJBQW1CLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQzs7QUFFbkssY0FBYyxtQkFBbUIsQ0FBQztBQVFsQyxNQUFNLE9BQU8sdUJBQXVCOztvSEFBdkIsdUJBQXVCO3FIQUF2Qix1QkFBdUIsaUJBTG5CLGlCQUFpQixFQUFFLG9CQUFvQixFQUFFLGlCQUFpQixFQUFFLGlCQUFpQixFQUFFLDBCQUEwQixFQUFFLG1CQUFtQixhQUVuSSxXQUFXLGFBQ1gsV0FBVyxFQUFFLGlCQUFpQixFQUFFLG9CQUFvQixFQUFFLGlCQUFpQixFQUFFLGlCQUFpQixFQUFFLDBCQUEwQixFQUFFLG1CQUFtQjtxSEFFMUksdUJBQXVCLFlBSHhCLFdBQVcsRUFDWCxXQUFXOzJGQUVWLHVCQUF1QjtrQkFObkMsUUFBUTttQkFBQztvQkFDUixZQUFZLEVBQUUsQ0FBQyxpQkFBaUIsRUFBRSxvQkFBb0IsRUFBRSxpQkFBaUIsRUFBRSxpQkFBaUIsRUFBRSwwQkFBMEIsRUFBRSxtQkFBbUIsQ0FBQztvQkFDOUksU0FBUyxFQUFFLEVBQUU7b0JBQ2IsT0FBTyxFQUFFLENBQUMsV0FBVyxDQUFDO29CQUN0QixPQUFPLEVBQUUsQ0FBQyxXQUFXLEVBQUUsaUJBQWlCLEVBQUUsb0JBQW9CLEVBQUUsaUJBQWlCLEVBQUUsaUJBQWlCLEVBQUUsMEJBQTBCLEVBQUUsbUJBQW1CLENBQUM7aUJBQ3ZKIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgVGV4dFZhbHVlQWNjZXNzb3IsIENoZWNrZWRWYWx1ZUFjY2Vzc29yLCBEYXRlVmFsdWVBY2Nlc3NvciwgVGltZVZhbHVlQWNjZXNzb3IsIE51bWJlclZhbHVlQWNjZXNzb3IsIFNlbGVjdGVkSW5kZXhWYWx1ZUFjY2Vzc29yIH0gZnJvbSAnLi92YWx1ZS1hY2Nlc3NvcnMnO1xuXG5leHBvcnQgKiBmcm9tICcuL3ZhbHVlLWFjY2Vzc29ycyc7XG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW1RleHRWYWx1ZUFjY2Vzc29yLCBDaGVja2VkVmFsdWVBY2Nlc3NvciwgRGF0ZVZhbHVlQWNjZXNzb3IsIFRpbWVWYWx1ZUFjY2Vzc29yLCBTZWxlY3RlZEluZGV4VmFsdWVBY2Nlc3NvciwgTnVtYmVyVmFsdWVBY2Nlc3Nvcl0sXG4gIHByb3ZpZGVyczogW10sXG4gIGltcG9ydHM6IFtGb3Jtc01vZHVsZV0sXG4gIGV4cG9ydHM6IFtGb3Jtc01vZHVsZSwgVGV4dFZhbHVlQWNjZXNzb3IsIENoZWNrZWRWYWx1ZUFjY2Vzc29yLCBEYXRlVmFsdWVBY2Nlc3NvciwgVGltZVZhbHVlQWNjZXNzb3IsIFNlbGVjdGVkSW5kZXhWYWx1ZUFjY2Vzc29yLCBOdW1iZXJWYWx1ZUFjY2Vzc29yXSxcbn0pXG5leHBvcnQgY2xhc3MgTmF0aXZlU2NyaXB0Rm9ybXNNb2R1bGUge31cbiJdfQ==