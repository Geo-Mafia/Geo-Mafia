import { Injectable } from '@angular/core';
import { TestComponentRenderer } from '@angular/core/testing';
import { ProxyViewContainer } from '@nativescript/core';
import { testingRootView } from './test-root-view';
import * as i0 from "@angular/core";
/**
 * A NativeScript based implementation of the TestComponentRenderer.
 */
export class NativeScriptTestComponentRenderer extends TestComponentRenderer {
    insertRootElement(rootElId) {
        const layout = new ProxyViewContainer();
        layout.id = rootElId;
        const rootLayout = testingRootView();
        while (rootLayout.getChildrenCount() > 0) {
            rootLayout.removeChild(rootLayout.getChildAt(0));
        }
        rootLayout.addChild(layout);
    }
}
NativeScriptTestComponentRenderer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: NativeScriptTestComponentRenderer, deps: null, target: i0.ɵɵFactoryTarget.Injectable });
NativeScriptTestComponentRenderer.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: NativeScriptTestComponentRenderer });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: NativeScriptTestComponentRenderer, decorators: [{
            type: Injectable
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF0aXZlc2NyaXB0X3Rlc3RfY29tcG9uZW50X3JlbmRlcmVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvYW5ndWxhci90ZXN0aW5nL3NyYy9saWIvbmF0aXZlc2NyaXB0X3Rlc3RfY29tcG9uZW50X3JlbmRlcmVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDOUQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDeEQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLGtCQUFrQixDQUFDOztBQUVuRDs7R0FFRztBQUVILE1BQU0sT0FBTyxpQ0FBa0MsU0FBUSxxQkFBcUI7SUFDMUUsaUJBQWlCLENBQUMsUUFBZ0I7UUFDaEMsTUFBTSxNQUFNLEdBQUcsSUFBSSxrQkFBa0IsRUFBRSxDQUFDO1FBQ3hDLE1BQU0sQ0FBQyxFQUFFLEdBQUcsUUFBUSxDQUFDO1FBRXJCLE1BQU0sVUFBVSxHQUFHLGVBQWUsRUFBRSxDQUFDO1FBQ3JDLE9BQU8sVUFBVSxDQUFDLGdCQUFnQixFQUFFLEdBQUcsQ0FBQyxFQUFFO1lBQ3hDLFVBQVUsQ0FBQyxXQUFXLENBQUMsVUFBVSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQ2xEO1FBQ0QsVUFBVSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUM5QixDQUFDOzs4SEFWVSxpQ0FBaUM7a0lBQWpDLGlDQUFpQzsyRkFBakMsaUNBQWlDO2tCQUQ3QyxVQUFVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgVGVzdENvbXBvbmVudFJlbmRlcmVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZS90ZXN0aW5nJztcbmltcG9ydCB7IFByb3h5Vmlld0NvbnRhaW5lciB9IGZyb20gJ0BuYXRpdmVzY3JpcHQvY29yZSc7XG5pbXBvcnQgeyB0ZXN0aW5nUm9vdFZpZXcgfSBmcm9tICcuL3Rlc3Qtcm9vdC12aWV3JztcblxuLyoqXG4gKiBBIE5hdGl2ZVNjcmlwdCBiYXNlZCBpbXBsZW1lbnRhdGlvbiBvZiB0aGUgVGVzdENvbXBvbmVudFJlbmRlcmVyLlxuICovXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgTmF0aXZlU2NyaXB0VGVzdENvbXBvbmVudFJlbmRlcmVyIGV4dGVuZHMgVGVzdENvbXBvbmVudFJlbmRlcmVyIHtcbiAgaW5zZXJ0Um9vdEVsZW1lbnQocm9vdEVsSWQ6IHN0cmluZykge1xuICAgIGNvbnN0IGxheW91dCA9IG5ldyBQcm94eVZpZXdDb250YWluZXIoKTtcbiAgICBsYXlvdXQuaWQgPSByb290RWxJZDtcblxuICAgIGNvbnN0IHJvb3RMYXlvdXQgPSB0ZXN0aW5nUm9vdFZpZXcoKTtcbiAgICB3aGlsZSAocm9vdExheW91dC5nZXRDaGlsZHJlbkNvdW50KCkgPiAwKSB7XG4gICAgICByb290TGF5b3V0LnJlbW92ZUNoaWxkKHJvb3RMYXlvdXQuZ2V0Q2hpbGRBdCgwKSk7XG4gICAgfVxuICAgIHJvb3RMYXlvdXQuYWRkQ2hpbGQobGF5b3V0KTtcbiAgfVxufVxuIl19